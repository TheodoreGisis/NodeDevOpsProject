name: CI/CD with Terraform

on:
  push:
    branches:
      - main

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_SECRET_ACCESS_KEY }}
  AWS_SSH_KEY_PRIVATE: ${{ secrets.AWS_SSH_KEY_PRIVATE }}
  AWS_SSH_KEY_PUBLIC: ${{ secrets.AWS_SSH_KEY_PUBLIC }}
  AWS_TF_STATE_BUCKET_NAME: ${{ secrets.AWS_TF_STATE_BUCKET_NAME }}
  AWS_REGION: eu-central-1

jobs:
  deploy-infra:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false

      - name: Print Environment Variables
        run: |
          echo "AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID"
          echo "AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY"
          echo "AWS_TF_STATE_BUCKET_NAME: $AWS_TF_STATE_BUCKET_NAME"
          echo "AWS_REGION: $AWS_REGION"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_SECRET_ACCESS_KEY }}
          AWS_TF_STATE_BUCKET_NAME: ${{ secrets.AWS_TF_STATE_BUCKET_NAME }}
          AWS_REGION: eu-central-1

      - name: Terraform init
        id: init
        run: |
          export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_SECRET_ACCESS_KEY }}
          terraform init -backend-config="bucket=${{ secrets.AWS_TF_STATE_BUCKET_NAME }}" -backend-config="region=${{ env.AWS_REGION }}"
        working-directory: ./terraform
      
      - name: Terraform plan
        id: plan
        run: |
          terraform plan \
          -var="region=${{ env.AWS_REGION }}" \
          -var="public_key=${{ secrets.AWS_SSH_KEY_PUBLIC }}" \
          -var="private_key=${{ secrets.AWS_SSH_KEY_PRIVATE }}" \
          -var="key_name=deployer-key" \
          -out=PLAN
        working-directory: ./terraform
      
      - name: Terraform apply
        id: apply
        run: terraform apply -auto-approve PLAN
        working-directory: ./terraform

      - name: List Terraform Outputs (Debug)
        id: list_outputs
        run: terraform output
        working-directory: ./terraform

      - name: Get Terraform Output
        id: get_output
        run: |
          PUBLIC_IP=$(terraform output -raw instance_public_ip)
          echo "PUBLIC_IP=$PUBLIC_IP" >> $GITHUB_ENV
        working-directory: ./terraform

      - name: Use Public IP
        run: echo "The public IP is ${{ env.PUBLIC_IP }}"
  
  deploy-app:
    runs-on: ubuntu-latest  
    needs: deploy-infra
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: log to ECR 
        id: login-ecr
        uses: aws-action/amazon-ecr-login@v1
      - name: Build Push Docker image
        env:
          REGISTERY: ${{ steps.login-ecr.outputs.registery }}
          REPOSITORY: example-app
          IMAGE-TAG: ${{github.sha}}
        run: |-
          docker build -t $REGISTERY/$REPOSITORY:$IMAGE-TAG .
          docker push $REGISTERY/$REPOSITORY:$IMAGE-TAG